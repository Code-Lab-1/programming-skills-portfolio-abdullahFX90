# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s1OHllNNJDkY0BJGo5hfD5sDW4QQWpGU
"""

def vend():
    w = {"item": "red bull", "rate": 10, "available stock": 30}
    x = {"item": "barbican", "rate": 7, "available stock": 18}
    y = {"item": "monster", "rate": 15, "available stock": 20}
    z = {"item": "sting", "rate": 2, "available stock": 60}
    items = [w, x, y, z]
    cim = 0  # cash in machine
    print("How can I help you! \n***")

    # show items, prices
    def show(items):
        print("\nitems available \n***")

        for item in list(items):
            if item.get("available stock") == 0:
                items.remove(item)
        for item in items:
            print(item.get("item"), item.get("rate"))

        print("*\n")

    # have user choose item
    while True:
        show(items)
        selected_item = input("select drink: ")
        for item in items:
            if selected_item == item.get("item"):
                rate = item.get("rate")
                while cim < rate:
                    try:
                        cim += float(input("insert " + str(rate - cim) + ": "))
                    except ValueError:
                        print("Please enter a valid amount.")
                        continue
                else:
                    print("availed items " + item.get("item"))
                    item["available stock"] -= 1
                    cim -= rate
                    print("cash remaining: " + str(cim))
                    a = input("buy something else? (y/n): ")
                    if a == "n":
                        if cim != 0:
                            print(str(cim) + " refunded")
                            cim = 0
                            print("Enjoy your drink!\n")
                            return  # exit both loops
                        else:
                            print("Enjoy your drink!\n")
                            return  # exit both loops
                    else:
                        continue


vend()

class VendingMachine:
    def _init_(self):
        self.items = {
            'I1': {'name': 'fanta', 'price': 2.5, 'quantity': 10},
            'I2': {'name': 'lays', 'price': 5, 'quantity': 4},
            'I3': {'name': 'kitkat', 'price': 3, 'quantity': 7},
            'I4': {'name': 'coke', 'price': 3, 'quantity': 15},
            'I5': {'name':'kinder', 'price':7, 'quantity':8}
        }

    def display_items(self):
        for code, item in self.items.items():
            print(f"{code}: {item['name']} - $ {item['price']}, Quantity: {item['quantity']}")

    def select_item(self, code):
        if code in self.items and self.items[code]['quantity'] > 0:
            return self.items[code]
        else:
            return None

    def pay(self, item, money):
        if money < item['price']:
            print("Not enough money.")
            return money
        else:
            change = money - item['price']
            item['quantity'] -= 1
            print(f"Dispensed {item['name']}. Your change is $ {change}.")
            return change


def main():
    VM = VendingMachine()
    while True:
        VM.display_items()
        code = input("Enter the code of the item you want to buy: ")
        item = VM.select_item(code)

        if item is not None:
            money = float(input("Enter your money: "))
            VM.pay(item, money)
        else:
            print("Invalid selection.")


if _name_ == "_main_":
    main()
